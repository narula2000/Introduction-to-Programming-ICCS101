import diet
import eto
import findme
import passwd
import t2048


assert(eto.eto([1,2,3,4,5,6])==[2, 4, 6, 5, 3, 1])
assert(eto.eto([1,2,36,9,2,43,17])==[2, 36, 2, 17, 43, 9, 1])
assert(eto.eto([1,29,2,43,17])==[2, 17, 43, 29, 1])
assert(eto.eto([1,2,3896,9,2,3,17])==[2, 3896, 2, 17, 3, 9, 1])
assert(eto.eto([2,3,4,2,2,22,2,2,2])==[2, 4, 2, 2, 22, 2, 2, 2, 3])

assert(passwd.passwordOK('ABd1234@1')==True)
assert(passwd.passwordOK('f#9')==False)
assert(passwd.passwordOK('Abbc1$f')==False)
assert(passwd.passwordOK('bcb1$f%')==False)
assert(passwd.passwordOK('Abcb1$f%')==True)

assert(findme.findMe(9, [1,2,9,5,3,9])==2)
assert(findme.findMe(7, [1,2,3,4,9])==None)
assert(findme.findMe('nag',[1,2,3,'nag',4])==3)
assert(findme.findMe(5, [5,5,5,55,5,5])==0)
assert(findme.findMe('ng', ['ng','gn','ng'])==0)

assert(diet.mealCal(["T-Bone", "T-Bone", "Green Salad1"], ["Pork Stew:Cabbage*5,Carrot*1,Fatty Pork*10",
"Green Salad1:Cabbage*10,Carrot*2,Pineapple*5",
"T-Bone:Carrot*2,Steak Meat*1"], ["Cabbage:4,2,0", "Carrot:9,1,5", "Fatty Pork:431,1,5",
"Pineapple:7,1,0", "Steak Meat:5,20,10", "Rabbit Meat:7,2,20"])==1290.0)
assert(diet.mealCal(["T-Bone", "T-Bone"], ["Pork Stew:Cabbage*5,Carrot*1,Fatty Pork*10",
"Green Salad1:Cabbage*10,Carrot*2,Pineapple*5",
"T-Bone:Carrot*2,Steak Meat*1"], ["Cabbage:4,2,0", "Carrot:9,1,5", "Fatty Pork:431,1,5",
"Pineapple:7,1,0", "Steak Meat:5,20,10", "Rabbit Meat:7,2,20"])==720.0)
assert(diet.mealCal(["T-Bone","Green Salad1"], ["Pork Stew:Cabbage*5,Carrot*1,Fatty Pork*10",
"Green Salad1:Cabbage*10,Carrot*2,Pineapple*5",
"T-Bone:Carrot*2,Steak Meat*1"], ["Cabbage:4,2,0", "Carrot:9,1,5", "Fatty Pork:431,1,5",
"Pineapple:7,1,0", "Steak Meat:5,20,10", "Rabbit Meat:7,2,20"])==930.0)
assert(diet.mealCal(["T-Bone", "T-Bone", "Green"], ["Pork Stew:Cabbage*5,Carrot*1,Fatty Pork*10",
"Green:Cabbage*10,Carrot*2,Pineapple*5",
"T-Bone:Carrot*2,Steak Meat*1"], ["Cabbage:4,2,0", "Carrot:9,1,5", "Fatty Pork:431,1,5",
"Pineapple:7,1,0", "Steak Meat:5,20,10", "Rabbit Meat:7,2,20"])==1290.0)
assert(diet.mealCal(["Green Salad2"], ["Pork Stew:Cabbage*5,Carrot*1,Fatty Pork*10",
"Green Salad2:Cabbage*10,Carrot*2,Pineapple*5",
"T-Bone:Carrot*2,Steak Meat*1"], ["Cabbage:4,2,0", "Carrot:9,1,5", "Fatty Pork:431,1,5",
"Pineapple:7,1,0", "Steak Meat:5,20,10", "Rabbit Meat:7,2,20"])==570.0)

assert(t2048.isGameOver([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])==False)
assert(t2048.doKeyUp([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])==(True, [['32', '2', '2', '8'], ['16', '16', '8', '32'], ['8', '4', '4', '4'], [' ', ' ', ' ', '16']]))
assert(t2048.doKeyDown([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])==(True, [[' ', ' ', ' ', '8'], ['32', '2', '2', '32'], ['16', '16', '8', '4'], ['8', '4', '4', '16']]))
assert(t2048.doKeyLeft([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])==(True, [['32', '4', '8', ' '], ['16', '16', '32', ' '], ['16', '4', ' ', ' '], ['8', '16', ' ', ' ']]))
assert(t2048.doKeyRight([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])==(True, [[' ', '32', '4', '8'], [' ', '16', '16', '32'], [' ', ' ', '16', '4'], [' ', ' ', '8', '16']]))
assert(t2048.emptyPos([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])==[(2, 2), (3, 0)])
assert(t2048.hist([['32', '2', '2', '8'],
['16', '8', '8', '32'],
['8', '8', ' ', '4'],
[' ', '4', '4', '16']])=={'32': 2, '2': 2, '8': 5, '16': 2, '4': 3})

assert(t2048.isGameOver([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])==False)
assert(t2048.doKeyUp([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])==(True, [['4', '32', '32', '4'], ['16', '4', '8', '32'], [' ', '2', ' ', '4'], [' ', ' ', ' ', ' ']]))
assert(t2048.doKeyDown([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])==(True, [[' ', ' ', ' ', ' '], [' ', '32', ' ', '4'], ['4', '4', '32', '32'], ['16', '2', '8', '4']]))
assert(t2048.doKeyLeft([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])==(True, [['4', '16', '2', ' '], ['8', '16', '32', '2'], ['8', '8', '32', ' '], ['2', '8', ' ', ' ']]))
assert(t2048.doKeyRight([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])==(True, [[' ', '4', '16', '2'], ['8', '16', '32', '2'], [' ', '8', '8', '32'], [' ', ' ', '2', '8']]))
assert(t2048.emptyPos([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])==[(0, 2), (3, 0)])
assert(t2048.hist([['4', '16', ' ', '2'],
['8', '16', '32', '2'],
['8', '4', '4', '32'],
[' ', '2', '4', '4']])=={'4': 5, '16': 2, '2': 3, '8': 2, '32': 2})

assert(t2048.isGameOver([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])==False)
assert(t2048.doKeyUp([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])==(True, [['32', '4', '32', '8'], ['32', '8', '4', '16'], [' ', '4', '8', '4'], [' ', ' ', ' ', ' ']]))
assert(t2048.doKeyDown([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])==(True, [[' ', ' ', ' ', ' '], [' ', '4', '32', '16'], ['32', '8', '4', '8'], ['32', '4', '8', '4']]))
assert(t2048.doKeyLeft([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])==(True, [['4', '32', '8', ' '], ['32', '8', '4', '8'], ['16', '4', '8', ' '], ['16', '8', '4', ' ']]))
assert(t2048.doKeyRight([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])==(True, [[' ', '4', '32', '8'], ['32', '8', '4', '8'], [' ', '16', '4', '8'], [' ', '16', '8', '4']]))
assert(t2048.emptyPos([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])==[(0, 0), (2, 2), (3, 1)])
assert(t2048.hist([[' ', '4', '32', '8'],
['32', '8', '4', '8'],
['16', '4', ' ', '8'],
['16', ' ', '8', '4']])=={'4': 4, '32': 2, '8': 5, '16': 2})

assert(t2048.isGameOver([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])==False)
assert(t2048.doKeyUp([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])==(True, [['4', '16', '32', '4'], ['16', '4', '16', '16'], ['32', ' ', '8', '2'], [' ', ' ', '4', ' ']]))
assert(t2048.doKeyDown([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])==(True, [[' ', ' ', '32', ' '], ['4', ' ', '16', '4'], ['16', '16', '8', '16'], ['32', '4', '4', '2']]))
assert(t2048.doKeyLeft([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])==(True, [['4', '8', '32', '4'], ['16', '32', ' ', ' '], ['8', '2', '8', ' '], ['32', '2', '4', '2']]))
assert(t2048.doKeyRight([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])==(True, [['4', '8', '32', '4'], [' ', ' ', '16', '32'], [' ', '8', '2', '8'], ['32', '2', '4', '2']]))
assert(t2048.emptyPos([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])==[(2, 3)])
assert(t2048.hist([['4', '8', '32', '4'],
['8', '8', '16', '16'],
['8', '2', '8', ' '],
['32', '2', '4', '2']])=={'4': 3, '8': 5, '32': 2, '16': 2, '2': 3})

assert(t2048.isGameOver([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])==False)
assert(t2048.doKeyUp([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])==(True, [['8', '16', '32', '2'], ['16', '2', '8', '8'], ['16', ' ', '16', '16'], [' ', ' ', ' ', '4']])
)
assert(t2048.doKeyDown([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])==(True, [[' ', ' ', ' ', '2'], ['8', ' ', '32', '8'], ['16', '16', '8', '16'], ['16', '2', '16', '4']])
)
assert(t2048.doKeyLeft([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])==(True, [['8', '2', ' ', ' '], ['32', '32', '8', ' '], ['16', '16', ' ', ' '], ['8', '2', '16', '4']])
)
assert(t2048.doKeyRight([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])==(True, [[' ', ' ', '8', '2'], [' ', '32', '32', '8'], [' ', ' ', '16', '16'], ['8', '2', '16', '4']])
)
assert(t2048.emptyPos([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])==[(0, 1), (0, 2), (2, 1)])
assert(t2048.hist([['8', ' ', ' ', '2'],
['16', '16', '32', '8'],
['8', ' ', '8', '16'],
['8', '2', '16', '4']])=={'8': 5, '2': 2, '16': 4, '32': 1, '4': 1})